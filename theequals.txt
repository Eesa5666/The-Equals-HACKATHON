<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AI Financial Assistant</title>
    <style>
        body {
            font-family: 'Poppins', sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f4;
            color: #333;
        }

        header {
            background-color: #8b0000;
            color: white;
            text-align: center;
            padding: 1.5em;
            font-size: 1.5em;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

        nav {
            display: flex;
            justify-content: center;
            background: #222;
            padding: 1em;
        }

        nav a {
            color: white;
            margin: 0 20px;
            text-decoration: none;
            font-size: 1.2em;
            transition: color 0.3s;
        }

        nav a:hover {
            color: #ffcc00;
        }

        .container {
            padding: 30px;
            text-align: center;
        }

        .feature,
        .market-data {
            background: white;
            margin: 20px auto;
            padding: 25px;
            border-radius: 12px;
            box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.2);
            max-width: 600px;
        }

        button {
            background-color: #ffcc00;
            color: #333;
            padding: 12px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 1em;
            transition: background 0.3s;
        }

        button:hover {
            background-color: #e6b800;
        }

        input,
        select {
            margin: 10px;
            padding: 10px;
            width: 90%;
            border: 1px solid #ccc;
            border-radius: 6px;
            font-size: 1em;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        th,
        td {
            border: 1px solid #ddd;
            padding: 10px;
            text-align: left;
        }

        th {
            background-color: #ffcc00;
        }
    </style>
    <script>
        function expenseTracker() {
            let month = document.getElementById('expense-month').value;
            let amount = parseFloat(document.getElementById('expense-amount').value);

            if (!month || isNaN(amount)) {
                alert("Please enter valid expense details.");
                return;
            }

            let table = document.getElementById('expense-table');
            let row = table.insertRow();
            let cell1 = row.insertCell(0);
            let cell2 = row.insertCell(1);

            cell1.innerText = month;
            cell2.innerText = $${amount.toFixed(2)}; // Corrected interpolation

            document.getElementById('expense-month').value = "";
            document.getElementById('expense-amount').value = "";
        }

        async function fetchMarketData() {
            try {
                const response = await fetch('https://api.coingecko.com/api/v3/simple/price?ids=bitcoin,ethereum&vs_currencies=usd');
                const data = await response.json();
                document.getElementById('bitcoin-price').innerText = Bitcoin: $${data.bitcoin.usd};
                document.getElementById('ethereum-price').innerText = Ethereum: $${data.ethereum.usd};
            } catch (error) {
                document.getElementById('market-data').innerText = 'Failed to load market data';
            }
        }

        function scenarioAnalysis() {
            let amount = parseFloat(document.getElementById('investment-amount').value);
            let years = parseInt(document.getElementById('investment-years').value);
            let stock = document.getElementById('investment-stock').value;

            if (!amount || !years || !stock) {
                document.getElementById('scenario-analysis-result').innerHTML = 'Please enter all fields';
                return;
            }

            const annualReturn = Math.random() * (0.2 - 0.05) + 0.05;
            let futureValue = amount * ((Math.pow(1 + annualReturn, years) - 1) / annualReturn);

            document.getElementById('scenario-analysis-result').innerHTML = <b>Scenario Analysis:</b><br> - If you invest $${amount} annually in ${stock} for ${years} years with an expected return of ${(annualReturn * 100).toFixed(2)}%:<br> - Future Value: ~$${futureValue.toFixed(2)};
        }

        window.onload = fetchMarketData;
    </script>
</head>

<body>
    <header>
        <h1>AI Financial Assistant</h1>
        <p>Helping You Make Smarter Investment Decisions</p>
    </header>
    <nav>
        <a href="#Scenario-Based Recommendations">Scenario-Based Recommendations</a>
        <a href="#Expense Tracker">Expense Tracker</a>
        <a href="#Market">Market Data</a>
    </nav>
    <div class="container" id="Scenario-Based Recommendations">
        <h2>Key Features</h2>
        <div class="feature">
            <h3>Scenario-Based Recommendations</h3>
            <input type="number" id="investment-amount" placeholder="Investment Amount ($)">
            <input type="number" id="investment-years" placeholder="Number of Years">
            <select id="investment-stock">
                <option value="">Select a Stock</option>
                <option value="Apple">Apple (AAPL)</option>
                <option value="Microsoft">Microsoft (MSFT)</option>
                <option value="Google">Google (GOOGL)</option>
                <option value="Amazon">Amazon (AMZN)</option>
                <option value="Tesla">Tesla (TSLA)</option>
                <option value="Nvidia">Nvidia (NVDA)</option>
                <option value="Meta">Meta (META)</option>
                <option value="Netflix">Netflix (NFLX)</option>
                <!-- Add more stocks as needed -->
            </select>
            <button onclick="scenarioAnalysis()">Analyze Scenario</button>
            <p id="scenario-analysis-result"></p>
        </div>
    </div>
    <div class="container" id="Expense Tracker">
        <h2>Expense Tracker</h2>
        <div class="feature">
            <select id="expense-month">
                <option value="">Select Month</option>
                <option value="January">January</option>
                <option value="February">February</option>
                <option value="March">March</option>
                <option value="April">April</option>
                <option value="May">May</option>
                <option value="June">June</option>
                <option value="July">July</option>
                <option value="August">August</option>
                <option value="September">September</option>
                <option value="October">October</option>
                <option value="November">November</option>
                <option value="December">December</option>
            </select>
            <input type="number" id="expense-amount" placeholder="Enter Expense Amount ($)">
            <button onclick="expenseTracker()">Add Monthly Expense</button>
            <table id="expense-table">
                <tr>
                    <th>Month</th>
                    <th>Expense ($)</th>
                </tr>
            </table>
        </div>
    </div>
    <div class="container" id="Market">
        <h2>Market Data</h2>
        <div class="market-data">
            <h3>Live Cryptocurrency Prices</h3>
            <p id="bitcoin-price">Bitcoin: Loading...</p>
            <p id="ethereum-price">Ethereum: Loading...</p>
        </div>
    </div>
</body>

</html>